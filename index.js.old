const jsonServer = require('json-server');
const server = jsonServer.create();
const path = require('path')
const router = jsonServer.router(path.join(__dirname, 'db.json'))
const middlewares = jsonServer.defaults();

const port = 3000;

server.use(middlewares);
server.use(jsonServer.bodyParser);

server.post('/liste', (req, res, next) => {
  const id = randomKey();
  req.body = {
    id,
    data: req.body
  };

  next();
});

server.use('/liste', router);

server.listen(port, () => {
  console.log(`JSON Server è stato avviato PORTA=${port}`);
});


function randomKey() {
  const { v4: uuidv4 } = require('uuid');
  return uuidv4;
}

// curl - X POST - H "Content-Type: application/json" - d "{\"campo1\": \"valore1\", \"campo2\": \"valore2\"}" http://localhost:3000/liste


/**
 * Se vuoi emulare il funzionamento di Firebase RealTime Database
 * in modo da creare chiavi univoche per liste
 * usa il seguente codice
 */

/* const jsonServer = require('json-server');
const server = jsonServer.create();
const router = jsonServer.router('db.json');
const middlewares = jsonServer.defaults();

server.use(middlewares);
server.use(jsonServer.bodyParser);

// funzione di middleware per generare il valore casuale e racchiudere i dati
server.use((req, res, next) => {
  if (req.method === 'POST') {
    const randomKey = new Date().getTime();
    req.body = {
      randomKey,
      data: req.body
    };
  }

  next();
});
const port = 3000;
server.use(router);
server.listen(port, () => {
  console.log(`JSON Server è stato avviato PORTA=${port}`);
}); */
